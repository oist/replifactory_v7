import{ac as i}from"./index-Cu3QcvOp.js";window.Vue=i;async function a(r){let e;try{if(e=r.split("/").reverse()[0].match(/^(.*?)\.umd/)[1],!e)throw new Error("Failed to extract module name from URL")}catch(o){return Promise.reject(new Error(`Error parsing URL: ${r} ${o.message}`))}return window[e]?window[e]instanceof Promise?window[e]:Promise.resolve(window[e]):(window[e]=new Promise((o,t)=>{const n=document.createElement("script");n.async=!0,n.addEventListener("load",()=>{window[e]?o(window[e]):t(new Error(`Module ${e} did not load correctly.`))}),n.addEventListener("error",()=>{t(new Error(`Error loading ${r}`))}),n.src=r,document.head.appendChild(n)}),window[e])}function s(r){return async()=>{if(!r)return{template:"<p>URL is not provided</p>"};try{return await a(r)}catch(e){return console.error(e),{template:`<p>${e.message}</p>`}}}}export{s as c};
//# sourceMappingURL=plugins-B_Y7fZCS.js.map

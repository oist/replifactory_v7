{"version":3,"file":"HomeSection-Ccla1riB.js","sources":["../../../vue/src/client/components/machine/MachineConnection.vue","../../../vue/src/client/components/machine/MachineState.vue","../../../vue/src/client/components/experiment/ExperimentsStatuses.vue","../../../vue/src/client/pages/replifactory/HomeSection.vue"],"sourcesContent":["<template>\n  <div class=\"connection-setup\">\n    <CForm class=\"row g-3\">\n      <CCol xs=\"12\">\n        <CFormLabel for=\"machineSelect\"> Machine </CFormLabel>\n        <CFormSelect id=\"machineSelect\" v-model=\"selectedMachine\" aria-label=\"Select machine\" :disabled=\"isConnected\">\n          <option v-for=\"(value, device_id) in connectionOptions.devices\" :key=\"device_id\" :value=\"device_id\">\n            {{ value.product }} ({{ value.serial_number }})\n          </option>\n        </CFormSelect>\n      </CCol>\n      <CCol xs=\"12\">\n        <CButton v-if=\"isDisconnected\" :disabled=\"loading\" type=\"button\" color=\"primary\" variant=\"outline\" class=\"w-100\"\n          @click=\"connectMachine\">\n          <CSpinner v-if=\"loading\" size=\"sm\" color=\"secondary\" />\n          Connect\n        </CButton>\n        <CButton v-else :disabled=\"loading\" type=\"button\" color=\"danger\" variant=\"outline\" class=\"w-100\"\n          @click=\"disconnectMachine\">\n          <CSpinner v-if=\"loading\" size=\"sm\" color=\"secondary\" />\n          Disconnect\n        </CButton>\n      </CCol>\n      <CAlert v-if=\"error\" v-model=\"showAlert\" color=\"danger\" @dismissed=\"onDismissed\">\n        {{ error }}\n      </CAlert>\n    </CForm>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from \"vuex\";\nimport {\n  CFormSelect,\n  CButton,\n  CFormLabel,\n  CForm,\n  CCol,\n  CSpinner,\n  CAlert,\n} from \"@coreui/vue\";\nimport api from \"@/api.js\";\n\nexport default {\n  components: {\n    CFormSelect,\n    CButton,\n    CFormLabel,\n    CForm,\n    CCol,\n    CSpinner,\n    CAlert,\n  },\n  data() {\n    return {\n      selectedMachine: undefined,\n      loading: false,\n      error: \"\",\n      showAlert: false,\n    };\n  },\n  computed: {\n    connectionOptions() {\n      let options = {};\n      let stateConnectedOptions = this.$store.state.machine.connection.options;\n      if (\n        this.isConnected &&\n        this.currentConnection !== undefined &&\n        !(this.currentConnection.id in options)\n      ) {\n        options[this.currentConnection.id] = this.currentConnection;\n        return {\n          ...stateConnectedOptions,\n          ...{\n            devices: options,\n          },\n        };\n      }\n      return stateConnectedOptions;\n    },\n    ...mapState(\"machine\", {\n      currentConnection: (state) => state.connection.current,\n      machineState: (state) => state.machineState,\n    }),\n    ...mapGetters(\"machine\", [\"isDisconnected\", \"isConnected\"]),\n  },\n  watch: {\n    connectionOptions(newVal) {\n      const options = newVal.devices;\n      if (this.isDisconnected && !(this.selectedMachine in options)) {\n        const [firstDeviceId] = Object.keys(options);\n        this.selectedMachine = firstDeviceId;\n      }\n    },\n    currentConnection(newVal) {\n      if (newVal != null) {\n        this.selectedMachine = newVal.id;\n      }\n    },\n  },\n  mounted() {\n    this.refreshConnectionOptions();\n    this.selectedMachine = this.currentConnection.id;\n  },\n  methods: {\n    async disconnectMachine() {\n      await this.connectCommand({\n        command: \"disconnect\",\n      });\n    },\n    async connectMachine() {\n      await this.connectCommand({\n        command: \"connect\",\n        device_id: this.selectedMachine,\n      });\n    },\n    async connectCommand(payload) {\n      this.loading = true;\n      this.showAlert = false;\n      try {\n        const response = await api.post(\"/api/connection\", payload);\n        console.log(\"Connection response: \" + response);\n        this.loading = false;\n      } catch (err) {\n        this.error = err.response.data;\n        this.showAlert = true;\n        this.loading = false;\n      }\n    },\n    refreshConnectionOptions() {\n      this.loading = true;\n      this.showAlert = false;\n      this.$store\n        .dispatch(\"machine/updateConnection\")\n        .then((data) => {\n          this.loading = false;\n          if (data.current.id != null) {\n            this.selectedMachine = data.current.id;\n          } else {\n            const [firstDeviceId] = Object.keys(data.options.devices);\n            this.selectedMachine = firstDeviceId;\n          }\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.error = err.response.data;\n          this.showAlert = true;\n        });\n    },\n    onDismissed() {\n      // do something when alert is dismissed\n    },\n  },\n  sockets: {\n    changeMachineListEvent() { },\n  },\n};\n</script>\n\n<style scoped></style>\n","<template>\n  <div class=\"MachineState\">\n    <dl class=\"row\">\n      <dt>State</dt>\n      <dd>{{ state_string }}</dd>\n      <dt>Queue</dt>\n      <dd>\n        Send: {{ sendQueue.size ? sendQueue.size : \"0\" }}<br />\n        Commands: {{ commandQueue.size ? commandQueue.size : \"0\" }}\n      </dd>\n    </dl>\n    <!-- <CButton\n      type=\"button\"\n      color=\"danger\"\n      :disabled=\"!deviceControlEnabled\"\n      @click=\"handleCleanCommandQueueClick\"\n    >\n      <CIcon icon=\"cilXCircle\" size=\"xl\" />\n      Abort\n    </CButton> -->\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from \"vuex\";\nimport { CButton } from \"@coreui/vue\";\nimport { CIcon } from \"@coreui/icons-vue\";\n\nexport default {\n  components: {\n    CButton,\n    CIcon,\n  },\n  computed: {\n    ...mapState(\"machine\", {\n      state_string: (state) => state.data.state.text,\n      sendQueue: (state) => state.queue.send,\n      commandQueue: (state) => state.queue.command,\n    }),\n    ...mapGetters(\"machine\", {\n      deviceControlEnabled: \"isManualControlEnabled\",\n    }),\n  },\n  methods: {\n    handleCleanCommandQueueClick() {\n      this.$store\n        .dispatch(\"machine/runCommand\", {\n          device: \"command_queue\",\n          command: \"clear\",\n        })\n        .then((data) => {\n          console.debug(data);\n        })\n        .catch((err) => {\n          this.$store.dispatch(\"notifyWarning\", {\n            content: err.response.data,\n          });\n        });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n","<template>\n  <div v-if=\"hasRunningExperiments\" class=\"list-group\">\n    <div\n      v-for=\"(status, id) in experimentStatuses\"\n      :key=\"id\"\n      class=\"list-group-item\"\n    >\n      <div class=\"d-flex w-100 justify-content-between\">\n        <div>\n          <h5 class=\"mb-1\">\n            <router-link\n              :to=\"{ name: 'ExperimentDetail', params: { id: id } }\"\n              class=\"text-decoration-none\"\n            >\n              {{ status.name }}\n            </router-link>\n          </h5>\n          <p class=\"mb-1\">{{ status.status }}</p>\n          <small\n            >Cycles: {{ status.cycles }} next every\n            {{ status.cycleTime }} seconds.</small\n          >\n        </div>\n        <div class=\"d-flex flex-column justify-content-start\">\n          <div>\n            <small>{{ timeSinceStart(status.startTime) }}</small>\n          </div>\n          <div class=\"text-end\">\n            <div\n              v-if=\"status.alive\"\n              class=\"btn-group\"\n              role=\"group\"\n              aria-label=\"Basic example\"\n            >\n              <!-- <button class=\"btn btn-warning\" @click=\"sendCommand(experiment.id, experiment.status)\">\n                <CIcon icon=\"cilMediaPause\" />\n              </button> -->\n              <button class=\"btn btn-danger\" @click=\"showStopModal(id)\">\n                <CIcon icon=\"cilMediaStop\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"text-end my-2\">\n    <button class=\"btn btn-success\" @click=\"goToExperimentSection\">\n      <CIcon icon=\"cilPlus\" /> Run new experiment\n    </button>\n  </div>\n  <BModal id=\"stopModal\" v-model=\"stopModal\" title=\"Stop Experiment\">\n    <template #modal-header=\"{ close }\">\n      <h5 class=\"modal-title\">Stop Experiment</h5>\n      <button type=\"button\" class=\"btn-close\" @click=\"close\"></button>\n    </template>\n\n    <div>Are you sure you want to stop the experiment?</div>\n\n    <template #footer>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary\"\n        @click=\"stopModal = false\"\n      >\n        Leave\n      </button>\n      <button type=\"button\" class=\"btn btn-danger\" @click=\"confirmStop\">\n        Stop\n      </button>\n    </template>\n  </BModal>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { CIcon } from \"@coreui/icons-vue\";\nimport { BModal } from \"bootstrap-vue-next\";\n\nconst store = useStore();\nconst router = useRouter();\n\nconst updateIntervalId = ref(null);\nconst selectedExperimentId = ref(null);\nconst stopModal = ref(false);\n\nconst experimentStatuses = computed(() => store.state.experiment.experiments);\nconst hasRunningExperiments = computed(\n  () => Object.keys(experimentStatuses.value).length > 0,\n);\n\nonMounted(() => {\n  updateIntervalId.value = setInterval(() => {\n    updateTimeSinceStart();\n  }, 5000);\n  store.dispatch(\"experiment/getExperiments\");\n});\nonBeforeUnmount(() => {\n  if (updateIntervalId.value) {\n    clearInterval(updateIntervalId.value);\n  }\n});\n\nfunction goToExperimentSection() {\n  router.push({ name: \"NewExperiment\" });\n}\n\nfunction timeSinceStart(startTime) {\n  const start = new Date(startTime);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - start) / 1000);\n  const hours = Math.floor(diffInSeconds / 3600);\n  const minutes = Math.floor((diffInSeconds % 3600) / 60);\n  const seconds = diffInSeconds % 60;\n\n  return `${hours}h ${minutes}m ${seconds}s ago`;\n}\n\nfunction updateTimeSinceStart() {\n  // Implementation of updateTimeSinceStart\n  // This function needs to be defined or updated to work with the refactored code\n}\nconst showStopModal = (experimentId) => {\n  selectedExperimentId.value = experimentId;\n  stopModal.value = true;\n};\nfunction confirmStop() {\n  sendExperimentCommand(selectedExperimentId.value, \"stop\", {});\n  stopModal.value = false;\n}\nfunction sendExperimentCommand(experimentId, command, args) {\n  const data = {\n    experimentId: experimentId,\n    command: command,\n    ...args,\n  };\n  store.dispatch(\"experiment/experimentCommand\", data).catch((err) => {\n    const message = err.response.data.error || err.response.data;\n    store.dispatch(\"notifyWarning\", {\n      content: message,\n    });\n  });\n}\n</script>\n","<template>\n  <div class=\"container d-flex align-items-stretch\">\n    <div class=\"row align-items-stretch flex-fill bg-body\">\n        <div class=\"col-md-3 p-3 border-end\">\n            <h4>Connection</h4>\n            <MachineConnection />\n            <h4 class=\"mt-3\">Machine State</h4>\n            <MachineState />\n        </div>\n        <div class=\"col-md-9 p-3\">\n            <h4>Running experiments</h4>\n            <ExperimentsStatuses />\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MachineConnection from \"@/client/components/machine/MachineConnection.vue\";\nimport MachineState from \"@/client/components/machine/MachineState.vue\";\nimport ExperimentsStatuses from \"@/client/components/experiment/ExperimentsStatuses.vue\";\nexport default {\n  components: {\n    MachineConnection,\n    MachineState,\n    ExperimentsStatuses,\n  },\n};\n</script>\n"],"names":["_sfc_main","CFormSelect","CButton","CFormLabel","CForm","CCol","CSpinner","CAlert","options","stateConnectedOptions","mapState","state","mapGetters","newVal","firstDeviceId","payload","response","api","err","data","_hoisted_1","_hoisted_2","_openBlock","_createElementBlock","_createVNode","_component_CForm","_withCtx","_component_CCol","_component_CFormLabel","_createTextVNode","_component_CFormSelect","$data","_cache","$event","_ctx","_Fragment","_renderList","$options","value","device_id","_toDisplayString","_createBlock","_component_CButton","_component_CSpinner","_createCommentVNode","_component_CAlert","CIcon","_hoisted_3","_createElementVNode","_hoisted_4","_hoisted_5","store","useStore","router","useRouter","updateIntervalId","ref","selectedExperimentId","stopModal","experimentStatuses","computed","hasRunningExperiments","onMounted","onBeforeUnmount","goToExperimentSection","timeSinceStart","startTime","start","diffInSeconds","hours","minutes","seconds","showStopModal","experimentId","confirmStop","sendExperimentCommand","command","args","message","MachineConnection","MachineState","ExperimentsStatuses","_hoisted_6","_hoisted_7","_component_MachineConnection","_component_MachineState","_component_ExperimentsStatuses"],"mappings":"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"}